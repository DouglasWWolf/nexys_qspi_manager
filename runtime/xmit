REG_BASE=0x1000
      REG_QSPI_CMD=$((REG_BASE + 4 * 0))
  REG_QSPI_BANKMAP=$((REG_BASE + 4 * 1))     
     REG_QSPI_ADDR=$((REG_BASE + 4 * 2))
  REG_QSPI_WDATA_H=$((REG_BASE + 4 * 3))
  REG_QSPI_WDATA_L=$((REG_BASE + 4 * 4))
    REG_QSPI_START=$((REG_BASE + 4 * 5))
  REG_QSPI_RDATA_H=$((REG_BASE + 4 * 6))
  REG_QSPI_RDATA_L=$((REG_BASE + 4 * 7))


#
#  Commands for REG_QSPI_CMD
#
QSPI_CMD_RD_HREG=0
QSPI_CMD_WR_HREG=1
QSPI_CMD_RD_BREG=2
QSPI_CMD_WR_BREG=3
QSPI_CMD_RD_SMEM=4
QSPI_CMD_WR_SMEM=5
QSPI_CMD_RD_BULK=6
QSPI_CMD_WR_BULK=7

selector=$1
test -z $selector && selector=WRITE_HREG

if [ $selector == WRITE_HREG ]; then
    axireg $REG_QSPI_CMD     $QSPI_CMD_WR_HREG
    axireg $REG_QSPI_BANKMAP 0
    axireg $REG_QSPI_ADDR    0x0000FEEC
    axireg $REG_QSPI_WDATA_L 0xABCDEF54
    axireg $REG_QSPI_START   1
fi

if [ $selector == READ_HREG ]; then
    axireg $REG_QSPI_CMD     $QSPI_CMD_RD_HREG
    axireg $REG_QSPI_ADDR    0x4
    axireg $REG_QSPI_START   1
    axireg $REG_QSPI_RDATA_L
fi

if [ $selector == WRITE_BREG ]; then
    axireg $REG_QSPI_CMD     $QSPI_CMD_WR_BREG
    axireg $REG_QSPI_BANKMAP 0x301
    axireg $REG_QSPI_ADDR    0x0000FEEC
    axireg $REG_QSPI_WDATA_L 0xABCDEF54
    axireg $REG_QSPI_START   1
fi

if [ $selector == READ_BREG ]; then
    axireg $REG_QSPI_CMD     $QSPI_CMD_RD_BREG
    axireg $REG_QSPI_BANKMAP 0x301
    axireg $REG_QSPI_ADDR    0x0000FEEC
    axireg $REG_QSPI_START   1
    axireg $REG_QSPI_RDATA_L
fi

if [ $selector == WRITE_SMEM ]; then
    axireg $REG_QSPI_CMD     $QSPI_CMD_WR_SMEM
    axireg $REG_QSPI_BANKMAP 0x301
    axireg $REG_QSPI_ADDR    0x00001968
    axireg $REG_QSPI_WDATA_H 0x11223344
    axireg $REG_QSPI_WDATA_L 0x55667788
    axireg $REG_QSPI_START   1
fi

if [ $selector == READ_SMEM ]; then
    axireg $REG_QSPI_CMD     $QSPI_CMD_RD_SMEM
    axireg $REG_QSPI_BANKMAP 0x301
    axireg $REG_QSPI_ADDR    0x00001968
    axireg $REG_QSPI_START   1
    axireg $REG_QSPI_RDATA_H
    axireg $REG_QSPI_RDATA_L
fi

